@page "/CreateUser"
@layout AdminLayout
@rendermode InteractiveServer

@using System.Security.Cryptography
@using System.Text
@using Microsoft.EntityFrameworkCore
@using ServiceContracts
@using TravelFusionLean.Data
@using TravelFusionLean.Components.Layout
@using TravelFusionLean.Models
@using System.ComponentModel.DataAnnotations


@inject IUserService UserService
@inject IUserRoleService UserRoleService

@inject NavigationManager NavigationManager

<h2>Create user </h2>



<EditForm EditContext="@editContext" OnValidSubmit="@Create">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <h6>Username *</h6>
    <InputText @bind-Value="_user.Username" class="@GetCssClass(IsUsernameValid, _user.Username)"oninput="@CheckUsernameAvailability" />
    @if (usernameIsTaken)
    {
        <div class="text-danger mt-1">Username already exists, chose a different.</div>
    }
    <h6>Password *</h6>
    <InputText @bind-Value="Password" class="@GetCssClass(IsPasswordValid, Password)" oninput="@CheckPasswordStrength" type="password"/>
    @if (!IsPasswordValid && passwordTouched == true)
    {
        <div class="text-danger mt-1">Password is too short.</div>
    }
    <h6>Repeat password *</h6>
    <InputText @bind-Value="PasswordRepeat" class="@GetCssClass(PasswordsMatch, PasswordRepeat)" type="password"/>
    @if (!PasswordsMatch)
    {
        <div class="text-danger mt-1">Passwords do not match.</div>
    }

    <label for="roleSelect">Select a role:</label>
    <select @bind="selectedRoleId">
        @foreach (UserRole role in _userRoles)
        {
            <option value="@role.Id">@role.Name</option>
        }
    </select>
    
    <br><br/>
    <br><br/>

    <h4>Contact information</h4>
    <h6>Name *</h6>
    <InputText @bind-Value="_user.Contact.Name"
               class="@GetCssClassFor(() => _user.Contact.Name)" />
    <ValidationMessage For="@(() => _user.Contact.Name)" />

    <h6>Phone *</h6>
    <InputText @bind-Value="_user.Contact.PhoneNumber"
               class="@GetCssClassFor(() => _user.Contact.PhoneNumber)" />
    <ValidationMessage For="@(() => _user.Contact.PhoneNumber)" />

    <h6>Email * </h6>
    <InputText @bind-Value="_user.Email"
               class="@GetCssClassFor(() => _user.Email)" />
    <ValidationMessage For="@(() => _user.Email)" />


    <button type="submit" disabled="@(!isFormValid)">Create </button>
</EditForm>




 