@page "/EditTravelPackage/{TravelPackageId:int}"
@inject ITravelPackageCoordinator TravelPackageCoordinator
@inject ITravelPackageService TravelPackageService
@inject HttpClient Http
@inject ICurrencyConverter currencyConverter
@inject NavigationManager navigationManager

@using Shared.Models
@using Shared.Dtos
@using TravelFusionLean.Components.Layout.Admin
@using TravelFusionLean.Components.SmallComponents
@using ServiceContracts
@layout AdminLayout
@rendermode InteractiveServer

<h2 class="text-primary-blue-center">Edit Travel Package</h2>

<!-- Formular og valgte oplysninger -->
<div class="container mt-4">
    <div class="row">
        <!-- LEFT: Form -->
        <div class="col-md-8">

            <TravelPackageForm OutboundFlight="package.OutboundFlight"
            InboundFlight="package.InboundFlight"
            SelectedHotelStay="package.HotelStay"
            ExistingPackage = "package"
            @ref="travelPackageForm" />
        </div>

        <!-- Flights and Hotel stacked -->
        <div class="col-md-4 d-flex flex-column gap-3">
            @if (package.OutboundFlight != null)
            {
                <TravelFusionLean.Components.SmallComponents.Flight.FlightCard Flight="package.OutboundFlight"></TravelFusionLean.Components.SmallComponents.Flight.FlightCard>
            }
            else
            {
                <div class="alert alert-warning h-100 d-flex align-items-center justify-content-center">
                    No Outboundflight selected. Please go back and choose one.
                </div>
            }

            @if (package.InboundFlight != null)
            {
                <TravelFusionLean.Components.SmallComponents.Flight.FlightCard Flight="package.InboundFlight"></TravelFusionLean.Components.SmallComponents.Flight.FlightCard>
            }
            else
            {
                <div class="alert alert-warning h-100 d-flex align-items-center justify-content-center">
                    No inboundflight selected. Please go back and choose one.
                </div>
            }

            @if (package.HotelStay != null)
            {
                <TravelFusionLean.Components.SmallComponents.HotelCard HotelStay="package.HotelStay"></TravelFusionLean.Components.SmallComponents.HotelCard>
            }
            else
            {
                <div class="alert alert-warning h-100 d-flex align-items-center justify-content-center">
                    No hotel selected.
                </div>
            }
        </div>
    </div>
</div>

<div class="mt-4 d-flex justify-content-end">
   @*  <button class="btn btn-primary" @onclick="CreateTravelPackageAsync">
        <i class="fa fa-plus"></i> Publish travel package
    </button>
    <button class="btn btn-primary ms-2" @onclick="CreateTravelPackageAsDraftAsync">
        <i class="fa fa-plus"></i> Save as draft
    </button> *@
</div>

@code 
{
    [Parameter]
    public int TravelPackageId { get; set; }
    private TravelPackage? package;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        package = await TravelPackageService.GetByIdAsync(TravelPackageId);
    }

    private TravelPackageForm travelPackageForm;

    // private async Task UpdateTravelPackageAsync()
    // {
    //     if (travelPackageForm == null)
    //         return;

    //     CreateTravelPackageDTO dto = travelPackageForm.GetTravelPackageDTO();
    //     dto. = TravelPackageId; // Husk at sætte ID ved opdatering

    //     // Antag Update-metode i koordinator som opdaterer eksisterende
    //     bool success = await TravelPackageCoordinator.UpdateTravelPackageAsync(dto);

    //     if (success)
    //     {
    //         navigationManager.NavigateTo("/TravelPackageList");
    //     }
    //     else
    //     {
    //         // Håndter fejl, fx vis besked til bruger
    //         // fx en toast-notifikation eller et flag i UI
    //     }
    // }
}


}
