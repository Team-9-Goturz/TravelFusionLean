@page "/publish-travel-package"
@inject ITravelPackageCoordinator TravelPackageCoordinator
@inject TravelPackageState travelPackageState
@inject HttpClient Http
@inject ICurrencyConverter currencyConverter
@inject NavigationManager navigationManager

@using Shared.Models
@using Shared.Dtos
@using TravelFusionLean.Components.Layout.Admin
@using TravelFusionLean.Components.SmallComponents
@using ServiceContracts
@layout AdminLayout
@rendermode InteractiveServer

<h2 class="text-primary-blue-center">Create Travel Package</h2>





<!-- Formular og valgte oplysninger -->
<div class="container mt-4">
    <div class="row">
        <!-- LEFT: Form -->
        <div class="col-md-8">
            <TravelPackageForm OutboundFlight="travelPackageState.OutboundFlight"
                                InboundFlight="travelPackageState.InboundFlight"
                                SelectedHotelStay="travelPackageState.SelectedHotelStay"
                                @ref="travelPackageForm" />
        </div>

        <!-- Flights and Hotel stacked -->
        <div class="col-md-4 d-flex flex-column gap-3">
            @if (travelPackageState.OutboundFlight != null)
            {
                <TravelFusionLean.Components.SmallComponents.Flight.FlightCard Flight="travelPackageState.OutboundFlight"></TravelFusionLean.Components.SmallComponents.Flight.FlightCard>
            }
            else
            {
                <div class="alert alert-warning h-100 d-flex align-items-center justify-content-center">
                    No Outboundflight selected. Please go back and choose one.
                </div>
            }

            @if (travelPackageState.InboundFlight != null)
            {
                <TravelFusionLean.Components.SmallComponents.Flight.FlightCard Flight="travelPackageState.InboundFlight"></TravelFusionLean.Components.SmallComponents.Flight.FlightCard>
            }
            else
            {
                <div class="alert alert-warning h-100 d-flex align-items-center justify-content-center">
                    No inboundflight selected. Please go back and choose one.
                </div>
            }

            @if (travelPackageState.SelectedHotelStay != null)
            {
                <TravelFusionLean.Components.SmallComponents.HotelCard HotelStay="travelPackageState.SelectedHotelStay"></TravelFusionLean.Components.SmallComponents.HotelCard>
            }
            else
            {
                <div class="alert alert-warning h-100 d-flex align-items-center justify-content-center">
                    No hotel selected.
                </div>
            }
        </div>
    </div>
</div>





<div class="mt-4 d-flex justify-content-end">
    <button class="btn btn-primary" @onclick="CreateTravelPackageAsync">
        <i class="fa fa-plus"></i> Publish travel package
    </button>
    <button class="btn btn-primary ms-2" @onclick="CreateTravelPackageAsDraftAsync">
        <i class="fa fa-plus"></i> Save as draft
    </button>
</div>

@code {
    private TravelPackageForm travelPackageForm;

    private async Task CreateTravelPackageAsync()
    {
        var dto = travelPackageForm.GetTravelPackageDTO();
        var travelPackage = await TravelPackageCoordinator.CreateTravelpackageAsync(dto, TravelPackageStatus.Available);
        navigationManager.NavigateTo("/TravelPackageList");
    }

    private async Task CreateTravelPackageAsDraftAsync()
    {
        var dto = travelPackageForm.GetTravelPackageDTO();
        await TravelPackageCoordinator.CreateTravelpackageAsync(dto, TravelPackageStatus.Draft);
    }
}

          
   
