@page "/travel-package-hotels"
@layout TravelFusionLean.Components.Layout.Admin.AdminLayout
@inject NavigationManager NavigationManager
@inject IHotelApiService HotelApiService
@inject TravelPackageState travelPackageState
@rendermode InteractiveServer
@using Shared.Models
@using Shared.DTOs

<link href="css/CustomColors.css" rel="stylesheet" />

<div class="container mt-4">
    <h2 class="text-primary-blue text-center">Choose Hotel</h2>

    <!-- Search Bar -->
    <div class="card p-3 mb-3">
        <div class="row">
            <div class="col-md-3">
                <label>Location:</label>
                <input type="text" class="form-control" @bind="searchForCountry" placeholder="Enter country of hotel"/>
            </div>
            <div class="col-md-3">
                <label>Location:</label>
                <input type="text" class="form-control" @bind="searchForCity" placeholder="Enter city of hotel"/>
            </div>
            <div class="col-md-3">
                <label>When:</label>
                <input type="date" class="form-control" @bind="searchDate" />
            </div>
            <div class="col-md-3">
                <label>Travellers:</label>
                <input type="number" class="form-control" @bind="numberOfTravellers" placeholder="Enter number of travelers" />
            </div>
            <div class="col-md-2">
                <label>Rooms:</label>
                <input type="number" class="form-control" placeholder="Number of rooms" />
            </div>
            <div class="col-md-1 d-flex align-items-end">
                <button class="btn btn-primary w-100" @onclick="FilterHotels">🔍</button>
            </div>
        </div>
    </div>

    <!-- Tabs for sorting -->
    <div class="row">
        <!-- LEFT SIDE: Tabs + Hotels -->
        <div class="@(selectedHotelstay != null ? "col-md-8" : "col-md-12")">
            <ul class="nav nav-tabs mt-3 mb-3">
                <li class="nav-item">
                    <button class="nav-link @(selectedTab == "cheapest" ? "active" : "")" @onclick="@(() => SetTab("cheapest"))">Cheapest</button>
                </li>
                <li class="nav-item">
                    <button class="nav-link @(selectedTab == "best" ? "active" : "")" @onclick="@(() => SetTab("best"))">Best</button>
                </li>
            </ul>

            <!-- Hotel list -->
            <div class="tab-content">
                @if (hotelStays == null)
                {
                    <p><em>Loading hotels...</em></p>
                }
                else if (!hotelStays.Any())
                {
                    <p>No hotels found.</p>
                }
                else
                {
                    foreach (HotelStay stay in filteredHotelStays)
                    {
                        <div class="d-flex justify-content-between border p-2 mb-2">
                            <div>
                                <strong>@stay.Hotel?.Name</strong><br />
                                @stay.Hotel?.City @stay.Hotel?.Country?.Name<br />
                                @stay.Hotel?.Description<br />
                                @stay.CheckInDate.ToShortDateString() - @stay.CheckOutDate.ToShortDateString()<br />
                                @stay.Price.ToString()
                            </div>
                            <button class="btn btn-primary" @onclick="() => SelectHotel(stay)">Select</button>
                        </div>
                    }
                }
            </div>
        </div>

        <!-- Selected Hotel Summary -->
        @if (selectedHotelstay != null)
        {
            <div class="col-md-4">
                <div class="card p-3 shadow-sm" style="background-color: #f5f9ff; border: 1px solid #c5dbf3;">
                    <h5>Selected Hotel</h5>
                    <p>
                        <strong>Country:</strong> @selectedHotelstay.Hotel.Country<br />
                        <strong>City:</strong> @selectedHotelstay.Hotel.City<br />
                        <strong>Address:</strong> @selectedHotelstay.Hotel.Address<br />
                        <strong>Name:</strong> @selectedHotelstay.Hotel.Name<br />
                        <strong>Description:</strong> @selectedHotelstay.Hotel.Description
                    </p>
                    <button class="btn btn-primary w-100 fw-bold" @onclick="ChooseHotel">Choose Hotel</button>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private List<HotelStay>? allHotels;
    private List<HotelStay>? filteredHotelStays;
    private HotelStay? selectedHotelstay;

    private string? selectedTab = "cheapest";
    private string? searchForCountry;
    private string? searchForCity;
    private string? searchLocation;
    private DateTime? searchDate;
    private decimal? searchPrice;
    private int? numberOfTravellers;
    private List<HotelStay>? hotelStays;

    protected override async Task OnInitializedAsync()
    {
        hotelStays = (await HotelApiService.GetAllHotelStaysAsync()).ToList();
        filteredHotelStays = hotelStays;
    }

    //Filter hotels by price and location
        //Lige nu er der kun search location, men ikke en location variabel. 
    private void FilterHotels()
    {
        filteredHotelStays = hotelStays
            .Where(h =>
                (string.IsNullOrWhiteSpace(searchForCountry) || h.Hotel.Country.Name.Contains(searchForCountry, StringComparison.OrdinalIgnoreCase)) &&
                (string.IsNullOrWhiteSpace(searchForCity) || h.Hotel.City.Contains(searchForCity, StringComparison.OrdinalIgnoreCase)) 
                // &&
                // // (searchDate.HasValue && h.CheckInDate.Date == searchDate.Value.Date) &&
                // (!numberOfTravellers.HasValue || h.NoOfTravellers >= numberOfTravellers.Value)
            )
            .ToList();
    }

    private void SetTab(string tab)
    {
        selectedTab = tab;
        StateHasChanged();
    }

    private void SelectHotel(HotelStay? hotelstay)
    {
        if (hotelstay != null)
        {
            selectedHotelstay = hotelstay;
            travelPackageState.SelectedHotelStay = hotelstay;
        }
    }

    private void ChooseHotel()
    {
        NavigationManager.NavigateTo("/publish-travel-package");
    }

    private IEnumerable<Hotel> SortedHotels =>
        selectedTab switch
        {
            // "cheapest" => filteredHotels?.OrderBy(h => h.Price) ?? Enumerable.Empty<Hotel>(),
            // "best" => filteredHotels?.OrderByDescending(h => h.Price) ?? Enumerable.Empty<Hotel>(),
            // _ => filteredHotelStays ?? Enumerable.Empty<Hotel>()
        };
}
