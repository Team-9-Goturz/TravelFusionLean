@page "/travelpackages/details/{id:int}"
@using Shared.Models
@using TravelFusionLean.Components.Layout.Customer
@layout CustomerLayout

@inject ITravelPackageService travelpackageService

<h2 class="mb-4">@TravelPackage?.Headline</h2>

@if (TravelPackage == null)
{
    <div class="alert alert-warning">
        Rejsepakken blev ikke fundet.
    </div>
}
else
{
    <div class="row">
        <div class="col-md-6">
            <!-- Vis billede, hvis der er et billede, ellers brug fallback -->
            <img src="@(!string.IsNullOrEmpty(TravelPackage?.ImagePath) ? TravelPackage.ImagePath : "/images/WineOnBeach.png")"
                 class="img-fluid rounded mb-3" alt="Billede af rejse" />

            <p><strong>Pris:</strong> @TravelPackage.Price?.Amount.ToString("C") @TravelPackage.Price?.Currency</p>
            <p><strong>Antal rejsende:</strong> @TravelPackage.NoOfTravellers</p>
            <p><strong>Status:</strong> @TravelPackage.Status</p>

            <details class="mt-3">
                <summary><strong>Vis beskrivelse</strong></summary>
                <p class="mt-2">@TravelPackage.Description</p>
            </details>
        </div>

        <div class="col-md-6">
            <h4 class="mt-3">Flyrejser</h4>
            <ul class="list-group mb-3">
                <li class="list-group-item">
                    <strong>Udgående:</strong><br />
                    @if (TravelPackage.OutboundFlight != null)
                    {
                        <div>
                            @TravelPackage.OutboundFlight.Airline –
                            @TravelPackage.OutboundFlight.DepartureTime.ToString("g") → @TravelPackage.OutboundFlight.ArrivalTime.ToString("g")
                        </div>
                    }
                    else
                    {
                        <span>Ikke angivet</span>
                    }
                </li>
                <li class="list-group-item">
                    <strong>Hjemrejse:</strong><br />
                    @if (TravelPackage.InboundFlight != null)
                    {
                        <div>
                            @TravelPackage.InboundFlight.Airline –
                            @TravelPackage.InboundFlight.DepartureTime.ToString("g") → @TravelPackage.InboundFlight.ArrivalTime.ToString("g")
                        </div>
                    }
                    else
                    {
                        <span>Ikke angivet</span>
                    }
                </li>
            </ul>

            <h4>Hotel</h4>
            @if (TravelPackage.HotelStay?.Hotel != null)
            {
                <div class="card p-3">
                    <h5>@TravelPackage.HotelStay.Hotel.Name</h5>
                    <p>@TravelPackage.HotelStay.Hotel.Description</p>
                    <p>
                        <strong>Adresse:</strong> @TravelPackage.HotelStay.Hotel.Address <br />
                        <strong>By:</strong> @TravelPackage.HotelStay.Hotel.City, @TravelPackage.HotelStay.Hotel.Country <br />
                        <strong>Rating:</strong> @TravelPackage.HotelStay.Hotel.Rating/5
                    </p>
                </div>
            }
            else
            {
                <p>Ingen hotelinformation tilgængelig.</p>
            }
        </div>
    </div>

    <a href="/Travelpackage-Browse" class="btn btn-secondary mt-4">Tilbage</a>
}

@code {
    [Parameter]
    public int id { get; set; }

    public TravelPackage? TravelPackage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        TravelPackage = await travelpackageService.GetByIdAsync(id);
    }
}

