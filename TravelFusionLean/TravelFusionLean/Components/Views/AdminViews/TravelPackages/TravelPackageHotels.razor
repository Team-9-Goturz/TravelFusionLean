@page "/travel-package-hotels"
@layout TravelFusionLean.Components.Layout.Admin.AdminLayout
@inject NavigationManager NavigationManager
@inject IHotelApiService HotelApiService
@inject TravelPackageState travelPackageState
@rendermode InteractiveServer
@using Shared.Models

<link href="css/CustomColors.css" rel="stylesheet" />

<div class="container mt-4">
    <h2 class="text-center">Choose Hotel</h2>

    <!-- Search Bar -->
    <div class="card p-3 mb-3">
        <div class="row">
            <div class="col-md-3">
                <label>Location:</label>
                <input type="text" class="form-control" @bind="searchCountry" placeholder="Enter country of hotel"/>
            </div>
            <div class="col-md-3">
                <label>Location:</label>
                <input type="text" class="form-control" @bind="searchCity" placeholder="Enter city of hotel"/>
            </div>
            <div class="col-md-3">
                <label>When:</label>
                <input type="date" class="form-control" @bind="searchDate" />
            </div>
            <div class="col-md-3">
                <label>Travellers:</label>
                <input type="number" class="form-control" @bind="numberOfTravellers" placeholder="Enter number of travelers" />
            </div>
            <div class="col-md-2">
                <label>Rooms:</label>
                <input type="number" class="form-control" placeholder="Number of rooms" />
            </div>
            <div class="col-md-1 d-flex align-items-end">
                <button class="btn btn-primary w-100" @onclick="FilterHotels">🔍</button>
            </div>
        </div>
    </div>

    <!-- Tabs for sorting -->
    <ul class="nav nav-tabs mt-3">
        <li class="nav-item">
            <button class="nav-link @(selectedTab == "cheapest" ? "active" : "")" @onclick="@(() => SetTab("cheapest"))">Cheapest</button>
        </li>
        <li class="nav-item">
            <button class="nav-link @(selectedTab == "best" ? "active" : "")" @onclick="@(() => SetTab("best"))">Best</button>
        </li>
    </ul>

    <!-- Hotel list -->
    <div class="tab-content p-3">
        @if (hotelStays == null)
        {
            <p><em>Loading hotels...</em></p>
        }
        else if (!hotelStays.Any())
        {
            <p>No hotels found.</p>
        }
        else
        {
            foreach (HotelStay stay in hotelStays)
            {
                <div class="d-flex justify-content-between border p-2 mb-2">
                    <div>
                        <strong>@stay.Hotel?.Name</strong><br />
                        @stay.Hotel?.Address<br />
                        @stay.Hotel?.Description<br />
                        @stay.CheckInDate.ToShortDateString() - @stay.CheckOutDate.ToShortDateString()<br />
                        @stay.Price.ToString("0.00") @stay.Currency?.Name
                    </div>
                    <button class="btn btn-primary" @onclick="() => SelectHotel(stay)">Select</button>
                </div>
            }
        }
    </div>

    <!-- Selected Hotel Summary -->
    @if (selectedHotelstay != null)
    {
        <div class="card mt-3 p-3">
            <h5>Selected Hotel</h5>
            <p>
                <strong>Country:</strong> @selectedHotelstay.Hotel.Country<br />
                <strong>City:</strong> @selectedHotelstay.Hotel.City<br />
                <strong>Address:</strong> @selectedHotelstay.Hotel.Address<br />
                <strong>Name:</strong> @selectedHotelstay.Hotel.Name<br />
                <strong>Description:</strong> @selectedHotelstay.Hotel.Description<br />
                 @selectedHotelstay?.Hotel.Name
            </p>
            <button class="btn btn-success" @onclick="ChooseHotel">Choose Hotel</button>
        </div>
    }
</div>

@code {
    private List<HotelStay>? allHotels;
    private List<HotelStay>? filteredHotelStays;
    private HotelStay? selectedHotelstay;

    private string? selectedTab = "cheapest";
    private string? searchCountry;
    private string? searchCity;
    private string? searchLocation;
    private DateTime? searchDate;
    private decimal? searchPrice;
    private int? numberOfTravellers;
    private List<HotelStay>? hotelStays;

    protected override async Task OnInitializedAsync()
    {
        hotelStays = (await HotelApiService.GetAllHotelStaysAsync()).ToList();
        filteredHotelStays = hotelStays;
    }
    //Filter hotels by price and location
        //Lige nu er der kun search location, men ikke en location variabel. 
    private void FilterHotels(){
        filteredHotelStays = allHotels?.Where(hs => 
        (string.IsNullOrWhiteSpace(searchCountry) || hs.Hotel.Country?.Contains(searchCountry, StringComparison.OrdinalIgnoreCase) == true) &&
        (string.IsNullOrWhiteSpace(searchCity) || hs.Hotel.City?.Contains(searchCity, StringComparison.OrdinalIgnoreCase) == true) &&
        (!searchPrice.HasValue)
        ).ToList();
    }

    private void SetTab(string tab)
    {
        selectedTab = tab;
        StateHasChanged();
    }

    private void SelectHotel(HotelStay? hotelstay)
    {
        if (hotelstay != null)
        {
            selectedHotelstay = hotelstay;
            travelPackageState.SelectedHotelStay = hotelstay;
        }
    }

    private void ChooseHotel()
    {
        NavigationManager.NavigateTo("/publish-travel-package");
    }

    private IEnumerable<Hotel> SortedHotels =>
        selectedTab switch
        {
            // "cheapest" => filteredHotels?.OrderBy(h => h.Price) ?? Enumerable.Empty<Hotel>(),
            // "best" => filteredHotels?.OrderByDescending(h => h.Price) ?? Enumerable.Empty<Hotel>(),
            // _ => filteredHotelStays ?? Enumerable.Empty<Hotel>()
        };
}
