@page "/TravelPackageList"
@layout AdminLayout
@rendermode InteractiveServer

@using ServiceImplementations;
@using TravelFusionLean.Components.SmallComponents
@using Shared.Dtos
@using Shared.Models
@using TravelFusionLean.Components.Layout
@using TravelFusionLean.Components.Layout.Admin

@inject ITravelPackageService travelPackageService

<TravelPackageSearch searchDTO="@SearchModel" OnSearch="FilterTravelPackages"></TravelPackageSearch>

@code
{
    // Søgemodel og resultater
    private TravelPackageSearchDTO SearchModel = new TravelPackageSearchBuilder()
      .WithDepartureDateEarliest(DateOnly.FromDateTime(DateTime.Now))
      .WithMinPrice(0)
      .Build();

    private List<TravelPackage> SearchResults = new();
    private int resultCount = 0;

    private async Task FilterTravelPackages()
    {
        var result = await travelPackageService.SearchAvailableAsync(SearchModel);
        SearchResults = result.ToList();
        resultCount = SearchResults.Count;
    }
}

<p>Results: <strong>@resultCount</strong></p>
<div class="container">
    <div class="row">
        @foreach (TravelPackage package in SearchResults)
        {
            <TravelPackageCard package="@package" />
        }
    </div>
</div>

@code 
{
    //LivsCyklus
    protected override async Task OnInitializedAsync()
    {
        await FilterTravelPackages();
    }
}

