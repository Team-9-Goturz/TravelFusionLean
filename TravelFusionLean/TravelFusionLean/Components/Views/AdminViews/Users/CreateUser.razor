@page "/CreateUser"
@layout AdminLayout
@rendermode InteractiveServer

@using System.Security.Cryptography
@using System.Text
@using Microsoft.EntityFrameworkCore
@using ServiceContracts
@using Data
@using TravelFusionLean.Components.Layout
@using TravelFusionLean.Models
@using System.ComponentModel.DataAnnotations
@using TravelFusionLean.Components.Layout.Admin

@inject IUserService UserService
@inject IUserRoleService UserRoleService
@inject NavigationManager NavigationManager

<link href="css/CustomColors.css" rel="stylesheet" />

<div class="container mt-4">
    <h2 class="text-center">Create User</h2>

    <div class="card p-4">
        <EditForm EditContext="@editContext" OnValidSubmit="@Create">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <!-- Username -->
            <div class="mb-3">
                <label class="form-label">Username *</label>
                <InputText @bind-Value="_user.Username" class="@UsernameCssClass" oninput="@CheckUsernameAvailability" />
                @if (usernameIsTaken)
                {
                    <div class="text-danger mt-1">Username already exists, choose a different one.</div>
                }
            </div>

            <!-- Password -->
            <div class="mb-3">
                <label class="form-label">Password *</label>
                <InputText @bind-Value="Password" class="@PasswordCssClass" oninput="@CheckPasswordStrength" type="password" />
                @if (!IsPasswordValid && passwordTouched == true)
                {
                    <div class="text-danger mt-1">Password is too short.</div>
                }
            </div>

            <!-- Repeat Password -->
            <div class="mb-3">
                <label class="form-label">Repeat password *</label>
                <InputText @bind-Value="PasswordRepeat" class="@PasswordRepeatCssClass" type="password" />
                @if (!PasswordsMatch)
                {
                    <div class="text-danger mt-1">Passwords do not match.</div>
                }
            </div>

            <!-- Role Dropdown -->
            <div class="mb-3">
                <label class="form-label">Select a role:</label>
                <select class="form-control" @bind="selectedRoleId">
                    @foreach (UserRole role in _userRoles)
                    {
                        <option value="@role.Id">@role.Name</option>
                    }
                </select>
            </div>

            <hr />

            <!-- Contact Info -->
            <h5 class="mt-4">Contact Information</h5>

            <div class="mb-3">
                <label class="form-label">Name *</label>
                <InputText @bind-Value="_user.Contact.Name" class="@ContactNameCssClass" />
                <ValidationMessage For="@(() => _user.Contact.Name)" />
            </div>

            <div class="mb-3">
                <label class="form-label">Phone *</label>
                <InputText @bind-Value="_user.Contact.PhoneNumber" class="@PhoneCssClass" />
                <ValidationMessage For="@(() => _user.Contact.PhoneNumber)" />
            </div>

            <div class="mb-3">
                <label class="form-label">Email *</label>
                <InputText @bind-Value="_user.Contact.Email" class="@EmailCssClass" />
                <ValidationMessage For="@(() => _user.Contact.Email)" />
            </div>

            <button type="submit" class="btn btn-primary mt-3" disabled="@(!isFormValid)">Create</button>
        </EditForm>
    </div>
</div>

@code {
    private string UsernameCssClass => $"form-control {GetCssClass(IsUsernameValid, _user.Username)}";
    private string PasswordCssClass => $"form-control {GetCssClass(IsPasswordValid, Password)}";
    private string PasswordRepeatCssClass => $"form-control {GetCssClass(PasswordsMatch, PasswordRepeat)}";
    private string ContactNameCssClass => $"form-control {GetCssClassFor(() => _user.Contact.Name)}";
    private string PhoneCssClass => $"form-control {GetCssClassFor(() => _user.Contact.PhoneNumber)}";
    private string EmailCssClass => $"form-control {GetCssClassFor(() => _user.EmailForPasswordReset)}";
}



 