@page "/"
@layout AdminLayout
@inject NavigationManager NavigationManager
@inject IUserService _userService

@using TravelFusionLean.Components.Layout.Admin
@using Shared.DTOs
@using TravelFusionLean.Models
@using System.ComponentModel.DataAnnotations

<PageTitle>Login</PageTitle>

<link href="css/CustomColors.css" rel="stylesheet" />

<div class="container py-5">
    <h3 class="text-primary fw-bold mb-4 text-center">🔐 Admin Login</h3>

    <div class="d-flex justify-content-center">
        <div class="col-md-6 col-lg-5 fade-in">
            <div class="card p-4 shadow">
                <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label for="Username" class="form-label">Username</label>
                        <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
                    </div>

                    <div class="mb-3">
                        <label for="Password" class="form-label">Password</label>
                        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
                    </div>

                    <button type="submit" class="btn btn-primary w-100">Login</button>
                </EditForm>

                @if (!string.IsNullOrEmpty(message))
                {
                    <div class="alert alert-danger text-center mt-3">@message</div>
                }
            </div>
        </div>
    </div>
</div>


@code {
    private UserLoginDto loginModel = new();
    private string? message;

    private async Task HandleLogin()
    {
        if (!string.IsNullOrWhiteSpace(loginModel.Username) &&
            !string.IsNullOrWhiteSpace(loginModel.Password))
        {
            var user = await _userService.AuthenticateByUsernameAsync(loginModel);

            if (user != null)
            {
                NavigationManager.NavigateTo("/AdminHome");
            }
            else
            {
                message = "Invalid username or password.";
            }
        }
        else
        {
            message = "Please enter both username and password.";
        }
    }
}
