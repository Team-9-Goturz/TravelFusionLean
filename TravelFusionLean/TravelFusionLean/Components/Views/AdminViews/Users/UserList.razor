@page "/UserList"
@layout AdminLayout
@rendermode InteractiveServer
@using TravelFusionLean.Components.Layout
@using Microsoft.EntityFrameworkCore
@using Data
@using TravelFusionLean.Components.Layout.Admin
@using TravelFusionLean.Models
@using TravelFusionLean.Components.Modals
@inject AppDbContext DbContext

@code {
    private List<User> _users = new List<User>();

    protected override void OnInitialized() 
    {
        base.OnInitialized(); 
        _users = DbContext.Users
           .Include(u => u.UserRole) // Eager load rollen
           .Include(u => u.Contact)
           .ToList();
    }
    private void DeleteUser(int userId)
    {
        var user = _users.FirstOrDefault(u => u.Id == userId);
        if (user is not null)
        {
            DbContext.Users.Remove(user);
            DbContext.SaveChanges();

            _users.Remove(user);
        }
    }
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h3 class="mb-0">Users</h3>
    <a class="btn btn-success" href="/CreateUser">
        <i class="bi bi-person-plus me-1"></i> Opret bruger
    </a>
</div>

<table class="table table-striped">
    <thead>
    <th>Id</th>
    <th>username</th>
    <th>navn</th>
    <th>email</th>
    <th>phonenumber</th>
    <th>role</th>
    <th>Actions</th>
    </thead>
    <tbody>
        @foreach (var user in _users)
        {
            <tr>
                <td>@user.Id</td>
                <td>@user.Username</td>
                <td>@user.Contact.Name</td>
                <td>@user.Email</td>
                <td>@user.Contact.PhoneNumber</td>
                <td>@user.UserRole.Name</td>
                <td>
                    <a class="btn btn-sm btn-primary me-1" href="/EditUser/@user.Id">Rediger</a>
                    <button class="btn btn-sm btn-warning me-1" @onclick="@(() => ShowResetPasswordModal(user))">Nulstil adgangskode</button>
                    <button class="btn btn-sm btn-danger" @onclick="@(() => DeleteUser(user.Id))">Slet</button>
                </td>

            </tr>
        }
    </tbody>
</table>


<ResetPasswordModal IsVisible="@showResetModal"
                    IsVisibleChanged="@((bool value) => showResetModal = value)"
                    SelectedUser="@selectedUser"
                    OnResetPassword="@HandleResetPassword" />

@code
{
    private bool showResetModal = false;
    private User? selectedUser;

    private void ShowResetPasswordModal(User user)
    {
        selectedUser = user;
        showResetModal = true;
    }

    private async Task HandleResetPassword(int userId)
    {
        var user = _users.FirstOrDefault(u => u.Id == userId);
        if (user != null)
        {
            // Du kunne vise en toast her
            Console.WriteLine($"🔐 Adgangskode for bruger {user.Username} blev nulstillet.");
        }
    }


}

