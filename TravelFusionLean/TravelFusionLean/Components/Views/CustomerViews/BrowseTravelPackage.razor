@page "/Travelpackage-Browse"
@using Shared.Dtos
@using TravelFusionLean.Components.Layout.Customer
@layout CustomerLayout
@rendermode InteractiveServer

@using Shared.Models
@using Data
@using ServiceImplementations;
@inject ITravelPackageService travelPackageService

<link href="css/CustomColors.css" rel="stylesheet" />

<h3 class="text-primary-blue text-center">Browse Travelpackages</h3>

<TravelFusionLean.Components.SmallComponents.TravelPackageSearch searchDTO="@SearchModel" OnSearch="FilterTravelPackages"></TravelFusionLean.Components.SmallComponents.TravelPackageSearch>

<br />
@code 
{
    private TravelPackageSearchDTO SearchModel = new()
    {
        DepartureDateEarliest = DateOnly.FromDateTime(DateTime.Now),
        MinPrice = 0,
        MaxPrice = 10000
    };

    private List<TravelPackage>? SearchResults;
    private int resultCount;
    private bool isLoading = true;
    private bool isSearching = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadInitialPackages();
    }

    private async Task LoadInitialPackages()
    {
        isLoading = true;
        await FilterTravelPackages();
        isLoading = false;
    }

    private async Task FilterTravelPackages()
    {
        isSearching = true;
        var result = await travelPackageService.SearchAvailableAsync(SearchModel);
        SearchResults = result.ToList();
        resultCount = SearchResults.Count;
        isSearching = false;
    }
}

<!-- Tabs for sorting and page size -->
<div class="d-flex justify-content-between align-items-center mb-3">
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <button class="nav-link @(selectedTab == "cheapest" ? "active" : "")" @onclick='() => SetTab("cheapest")'>Cheapest</button>
        </li>
        <li class="nav-item">
            <button class="nav-link @(selectedTab == "New" ? "active" : "")" @onclick='() => SetTab("News")'>Best</button>
        </li>
    </ul>
    <div>
        <label for="pageSizeSelector" class="form-label me-2">Results per page:</label>
        <select id="pageSizeSelector" class="form-select" style="width: auto; display: inline-block;" @onchange="OnPageSizeChange">
            <option value="10" selected>10</option>
            <option value="20">20</option>
            <option value="50">50</option>
        </select>
    </div>
</div>
@code {
    private string selectedTab = "fastest";
    private void SetTab(string tab)
    {
        selectedTab = tab;
        // CurrentPage = 1;
        StateHasChanged();
    }


    private int CurrentPage { get; set; } = 1;
    private int PageSize { get; set; } = 10;
    private int TotalPages => (int)Math.Ceiling((double)(SearchResults?.Count ?? 0) / PageSize);

    private IEnumerable<TravelPackage> PagedFlights =>
        SearchResults?.Skip((CurrentPage - 1) * PageSize).Take(PageSize) ?? Enumerable.Empty<TravelPackage>();

    private void GoToPage(int page)
    {
        if (page >= 1 && page <= TotalPages)
            CurrentPage = page;
    }

    private void NextPage()
    {
        if (CurrentPage < TotalPages)
            CurrentPage++;
    }

    private void PreviousPage()
    {
        if (CurrentPage > 1)
            CurrentPage--;
    }

    private void OnPageSizeChange(ChangeEventArgs e)
    {
        if (int.TryParse(e?.Value?.ToString(), out int newSize) && newSize >= 10)
        {
            PageSize = newSize;
            CurrentPage = 1;
            StateHasChanged();
        }
    }
}

  @if (isLoading)
{
    <p><em>Loading travelpackages...</em></p>
}
else if (isSearching)
{
    <p><em>Searching...</em></p>
}
else if (SearchResults == null || !SearchResults.Any())
{
    <p><strong>No travelpackages found.</strong></p>
}
else
{
    <p>Results: <strong>@resultCount</strong></p>
    <div class="container">
        <div class="row">
            @foreach (TravelPackage package in SearchResults)
            {
                <div class="col-md-4 mb-4">
                    <div class="card @(package.IsRecommended == true ? "recommended-package" : "")">
                        <img loading="lazy" src="@(!string.IsNullOrEmpty(package.ImagePath) ? package.ImagePath : "/images/WineOnBeach.png")" alt="Travel Package Image" class="card-img-top" style="height: 200px; object-fit: cover;">
                        <div class="card-body">
                            <h5 class="card-title"> @package.Headline</h5>
                            <p class="card-text">
                                @if (!string.IsNullOrEmpty(package.Description))
                                {
                                    var truncated = package.Description.Length > 100 ? package.Description.Substring(0, 95) + "..." : package.Description;
                                    @truncated
                                }
                            </p>
                            <p><strong>Antal rejsende:</strong> @package.NoOfTravellers</p>
                            <p><strong>Pris:</strong> @package.Price</p>
                            <a class="btn btn-sm btn-primary me-1" href="/travelpackages/details/@package.Id">Vis mere</a>
                            <a class="btn btn-sm btn-primary me-1" href="/MakeBooking/@package.Id">Book</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}