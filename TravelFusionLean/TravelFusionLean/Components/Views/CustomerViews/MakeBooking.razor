@page "/MakeBooking/{TravelPackageId:int}"
@using ServiceImplementations.Dtos
@using Shared.Dtos
@using TravelFusionLean.Components.Layout.Customer
@using Shared.Models
@using Data
@using ServiceImplementations

@layout CustomerLayout
@rendermode InteractiveServer

@inject ITravelPackageService travelPackageService
@inject ICountryReadService CountryService
@inject IBookingCoordinator bookingcoordinator

@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

@code {
    [Parameter]
    public int TravelPackageId { get; set; }

    private TravelPackage TravelPackage;
    private Traveller[] Travellers;
    private List<Country> Countries;
    private bool IsUserTravelManager = true;
    private Contact TravelManagerContact = new();
    private Booking booking = new();

    protected override async Task OnInitializedAsync()
    {
        Countries = (await CountryService.GetAllAsync())
            .OrderBy(c => c.Name).ToList();

        TravelPackage = await travelPackageService.GetByIdAsync(TravelPackageId);
        Travellers = Enumerable.Range(0, TravelPackage.NoOfTravellers)
                               .Select(_ => new Traveller()).ToArray();
    }
    private void ToggleTravellerDetails(Traveller traveller)
    {
        traveller.ShowDetails = !traveller.ShowDetails;
    }
    private async Task CreateBooking()
    {
        CreateBookingDTO createBookingDTO;
        if (!IsUserTravelManager)
        {
            ContactDTO contactDTO = new ContactDTO(TravelManagerContact.Name, TravelManagerContact.PhoneNumber, TravelManagerContact.Email);
            createBookingDTO = new CreateBookingDTO(TravelPackageId, Travellers.ToList(), contactDTO);
        }
        else
        {
            createBookingDTO = new CreateBookingDTO(TravelPackageId, Travellers.ToList(),5);
        }
        booking = await bookingcoordinator.CreateBookingAsync(createBookingDTO);

        await HandlePaymentAsync(booking);
    }

    private async Task HandlePaymentAsync(Booking booking)
    {
        try
        {
            var redirectUrl = await bookingcoordinator.CreatePaymentAndGetRedirectUrlAsync(booking);
            NavigationManager.NavigateTo(redirectUrl);
        }
        catch (Exception ex)
        {
            // TODO: Log or show error to user
        }
    }
}

@if (TravelPackage != null && Travellers != null)
{
    @foreach (var traveller in Travellers)
    {
        <div class="mb-3">
            <h5 class="mb-2 toggle-header" @onclick="() => ToggleTravellerDetails(traveller)" style="cursor: pointer;">
                @((traveller.ShowDetails ? "▼" : "►") + " " + (traveller.FirstName ?? "Rejsende"))
            </h5>

            @if (traveller.ShowDetails)
            {
                <InputText @bind-Value="traveller.FirstName" class="form-control" placeholder="Fornavn" />
                <InputText @bind-Value="traveller.LastName" class="form-control" placeholder="Efternavn" />
                <InputDate @bind-Value="traveller.DateOfBirth" class="form-control" />
                
                <div class="form-group">
                    <label>Køn</label>
                    <InputSelect @bind-Value="traveller.Gender" class="form-control">
                        @foreach (var gender in Enum.GetValues<Gender>())
                        {
                            <option value="@gender">@gender</option>
                        }
                    </InputSelect>
                </div>

                <div class="form-group">
                    <label>Nationalitet</label>
                    <InputSelect @bind-Value="traveller.NationalityId" class="form-control">
                        <option value="">-- Vælg land --</option>
                        @foreach (var country in Countries)
                        {
                            <option value="@country.Id">@country.Nationality</option>
                        }
                    </InputSelect>
                </div>

                <InputText @bind-Value="traveller.PassportNumber" class="form-control" placeholder="Pasnummer" />
                <InputDate @bind-Value="traveller.PassportExpiry" class="form-control" />
                
                <InputSelect @bind-Value="traveller.PassportIssuingCountryId" class="form-control">
                    <option value="">-- Vælg udstedelsesland --</option>
                    @foreach (var country in Countries)
                    {
                        <option value="@country.Id">@country.Name</option>
                    }
                </InputSelect>
            }
        </div>
    }
}
else
{
    <p>Indlæser rejsedata...</p>
}

<!-- Rejseansvarlig -->
<div class="mt-4">
    <label>Er du rejseansvarlig?</label>
    <InputRadioGroup @bind-Value="IsUserTravelManager">
        <InputRadio Value="true" /> Ja<br />
        <InputRadio Value="false" /> Nej<br />
    </InputRadioGroup>
</div>

@if (!IsUserTravelManager)
{
    <div class="form-group">
        <label>Navn:</label>
        <InputText @bind-Value="TravelManagerContact.Name" class="form-control" />
    </div>
    <div class="form-group">
        <label>Telefon:</label>
        <InputText @bind-Value="TravelManagerContact.PhoneNumber" class="form-control" />
    </div>
    <div class="form-group">
        <label>Email:</label>
        <InputText @bind-Value="TravelManagerContact.Email" class="form-control" />
    </div>
}

<button class="btn btn-primary mt-3" @onclick="CreateBooking">Fortsæt</button>

